pipeline {

     parameters {
         strings(name: 'environment' , defaultvalue: 'terraform' , description: 'workspace/environment file to use for deployment')
         booleanparam(name: 'autoApprove' , defaultvalue: false, description: 'automatically run apply after generating plan?')

      }


     environment {
       AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
       AWS_SECRET_KEY_ID     = credentials('AWS_SECRET_KEY_ID')
     
     }
  
     agent any 
         options {
                 timestamps ()
                 ansicolor('xterm')
                }
     stages {
          stage('checkout') {
               steps {
                     script{
                            dir("terraform")
                            {
                              git "https://github.com/rajparthi/doname.git"
                            }
                         }
                      }
                    }

            
           stages('plan') {
                steps {	
                     sh 'pwd;cd terraform/doname ; terraform init -input=false'
                     sh 'pwd;cd terraform/doname ; terraform workspace new ${environment}'
                     sh 'pwd;cd terraform/doname ; terraform workspace select ${environment}'
                     sh 'pwd;cd terraform/doname ; terraform plan -input=false -out tfplan'
                     sh 'pwd;cd terraform/doname ; terraform show -no-color tfplan > tfplan.txt'
                   }
                }
                stage('approval') {
                    when {
                        not {
                             equals expected: true, actual: params.autoaprrove
                           }
                        }
                        
                steps {
                    script {
                          def plan = readfile 'terraform/doname/tfplan.txt'
                          input message = "do you want to apply?",
                          parameters: [text(name: 'plan',description: 'please review the plan' defaultvalue:plan)]
                       }
                    }
                  }
               
                stage('apply') {
                      steps {
                            sh "pwd;cd terraform/doname ; terraform apply -input=false tfplan"
                          }
                        }
                     } 
                  
                 }        
